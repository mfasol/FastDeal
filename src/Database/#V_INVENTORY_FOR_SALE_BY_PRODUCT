CREATE OR REPLACE FORCE VIEW PUBLIC.V_INVENTORY_FOR_SALE_BY_PRODUCT(PRODUCT, TOTAL, AVAILABLE_FOR_SALE, INVENTORY_SOLD, TOTAL_SALES, CHECK) AS

SELECT
    PRODUCT,
    TOTAL,
    COALESCE(AVAILABLE_FOR_SALE, 0),
    COUNT_SOLD,
    COALESCE(TOTAL_SALES,0)

FROM (
    SELECT
        PRODUCT_KEY AS PRODUCT,
        COUNT(PRODUCT_KEY) AS TOTAL
    FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON

    GROUP BY PRODUCT_KEY

) _0

LEFT OUTER JOIN (
    SELECT
        PRODUCT_KEY AS AVAILABLE_FOR_SALE_KEY,
        COUNT(PRODUCT_KEY) AS AVAILABLE_FOR_SALE
    FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON

    WHERE INVENTORY_ITEM_STATUS = 'AVAILABLE_FOR_SALE'
    GROUP BY PRODUCT_KEY

) _1

    ON PRODUCT = AVAILABLE_FOR_SALE_KEY
LEFT OUTER JOIN (
    SELECT
        PRODUCT_KEY AS SOLD_KEY,
        COUNT(PRODUCT_KEY) AS COUNT_SOLD
    FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON

    WHERE INVENTORY_ITEM_STATUS = 'SOLD'
    GROUP BY PRODUCT_KEY

) _2

    ON PRODUCT = SOLD_KEY
LEFT OUTER JOIN (
    SELECT
        PRODUCT_KEY AS SALES_PRODUCT_KEY,
        COUNT(ITEM_ID) AS TOTAL_SALES
    FROM PUBLIC.SALES_LEDGER

    WHERE SALES_LEDGER.TRANSACTION_STATUS = 'SALE'
    GROUP BY PRODUCT_KEY
) _3

    ON PRODUCT = SALES_PRODUCT_KEY

  UNION ALL
(
    SELECT 'TOTAL',
      (SELECT COUNT(PRODUCT_KEY)  FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON),
      (SELECT COUNT(PRODUCT_KEY)  FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON WHERE INVENTORY_ITEM_STATUS='AVAILABLE_FOR_SALE'),
      (SELECT COUNT(PRODUCT_KEY)  FROM PUBLIC.INVENTORY_ITEMS_GB_AMAZON WHERE INVENTORY_ITEM_STATUS='SOLD'),
      (SELECT COUNT(PRODUCT_KEY)  FROM PUBLIC.SALES_LEDGER WHERE TRANSACTION_STATUS='SALE')
)
