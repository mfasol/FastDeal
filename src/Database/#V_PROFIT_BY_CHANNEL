CREATE OR REPLACE FORCE VIEW PUBLIC.V_PROFIT_BY_CHANNEL(ITEM, AMAZON, EBAY) AS
(SELECT
    'TOTAL_SALES',
    (SELECT
        ROUND(SUM(SALES), 2)
    FROM PUBLIC.V_SALES_CONTRIBUTION
        /* SELECT
            SALES_LEDGER.TRANSACTION_DATE,
            SALES_LEDGER.ITEM_ID,
            SALES_LEDGER.PRODUCT_KEY,
            SALES_LEDGER.TRANSACTION_PRICE AS SALES,
            ROUND(SALES_LEDGER.LOGISTIC_ADDITIONAL_COS, 4) AS LOG_COS,
            ROUND(SALES_LEDGER.MERCHANT_CHANNEL_FEES, 4) AS REF_COS,
            ROUND((SALES_LEDGER.LOGISTIC_ADDITIONAL_COS + SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS TOT_FULFIL_COS,
            ROUND(((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS CONT_AFT_MERCH,
            ROUND(COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0), 4) AS COS,
            ROUND((((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES) - COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0)), 4) AS PROFIT,
            SALES_LEDGER.MERCHANT_CHANNEL AS SALES_CHANNEL,
            SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY AS SALES_COUNTRY,
            SALES_LEDGER.LOGISTIC_CHANNEL AS LOGISTIC_CHANNEL,
            SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY AS LOGISTIC_COUNTRY,
            SALES_LEDGER.TRANSACTION_STATUS AS TYPE
        FROM PUBLIC.SALES_LEDGER
            /++ PUBLIC.SALES_LEDGER.tableScan ++/
            /++ WHERE (SALES_LEDGER.MERCHANT_CHANNEL IS ?1)
                AND ((SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY IS ?2)
                AND (SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02'))
            ++/
        LEFT OUTER JOIN PUBLIC.INVENTORY_ITEMS_GB_AMAZON
            /++ PUBLIC.INVENTORY_ITEMS_SINGLE_ITEM_UUID_UINDEX: SINGLE_ITEM_UUID = SALES_LEDGER.ITEM_UUID ++/
            ON (SALES_LEDGER.ITEM_ID = INVENTORY_ITEMS_GB_AMAZON.CONCATENATED_PRIMARY_KEY)
            AND (SALES_LEDGER.ITEM_UUID = INVENTORY_ITEMS_GB_AMAZON.SINGLE_ITEM_UUID)
        WHERE (SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY IS ?2)
            AND ((SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02')
            AND (SALES_LEDGER.MERCHANT_CHANNEL IS ?1)): SALES_COUNTRY = 'GB'
            AND SALES_CHANNEL = 'AMAZON'
         */
    WHERE (V_SALES_CONTRIBUTION.SALES_COUNTRY = 'GB')
        AND (V_SALES_CONTRIBUTION.SALES_CHANNEL = 'AMAZON')),
   (SELECT
      ROUND(SUM(SALES), 2)
    FROM PUBLIC.V_SALES_CONTRIBUTION
    /* SELECT
        SALES_LEDGER.TRANSACTION_DATE,
        SALES_LEDGER.ITEM_ID,
        SALES_LEDGER.PRODUCT_KEY,
        SALES_LEDGER.TRANSACTION_PRICE AS SALES,
        ROUND(SALES_LEDGER.LOGISTIC_ADDITIONAL_COS, 4) AS LOG_COS,
        ROUND(SALES_LEDGER.MERCHANT_CHANNEL_FEES, 4) AS REF_COS,
        ROUND((SALES_LEDGER.LOGISTIC_ADDITIONAL_COS + SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS TOT_FULFIL_COS,
        ROUND(((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS CONT_AFT_MERCH,
        ROUND(COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0), 4) AS COS,
        ROUND((((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES) - COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0)), 4) AS PROFIT,
        SALES_LEDGER.MERCHANT_CHANNEL AS SALES_CHANNEL,
        SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY AS SALES_COUNTRY,
        SALES_LEDGER.LOGISTIC_CHANNEL AS LOGISTIC_CHANNEL,
        SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY AS LOGISTIC_COUNTRY,
        SALES_LEDGER.TRANSACTION_STATUS AS TYPE
    FROM PUBLIC.SALES_LEDGER
        /++ PUBLIC.SALES_LEDGER.tableScan ++/
        /++ WHERE (SALES_LEDGER.MERCHANT_CHANNEL IS ?1)
            AND ((SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY IS ?2)
            AND (SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02'))
        ++/
    LEFT OUTER JOIN PUBLIC.INVENTORY_ITEMS_GB_AMAZON
        /++ PUBLIC.INVENTORY_ITEMS_SINGLE_ITEM_UUID_UINDEX: SINGLE_ITEM_UUID = SALES_LEDGER.ITEM_UUID ++/
        ON (SALES_LEDGER.ITEM_ID = INVENTORY_ITEMS_GB_AMAZON.CONCATENATED_PRIMARY_KEY)
        AND (SALES_LEDGER.ITEM_UUID = INVENTORY_ITEMS_GB_AMAZON.SINGLE_ITEM_UUID)
    WHERE (SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY IS ?2)
        AND ((SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02')
        AND (SALES_LEDGER.MERCHANT_CHANNEL IS ?1)): SALES_COUNTRY = 'GB'
        AND SALES_CHANNEL = 'AMAZON'
     */
    WHERE (V_SALES_CONTRIBUTION.SALES_COUNTRY = 'GB')
          AND (V_SALES_CONTRIBUTION.SALES_CHANNEL = 'EBAY'))
FROM SYSTEM_RANGE(1, 1)
    /* PUBLIC.RANGE_INDEX */)
UNION ALL
(SELECT
    'TOTAL_COSTS',
   (SELECT ROUND(SUM(LOG_COS), 2)
FROM PUBLIC.V_SALES_CONTRIBUTION
    /* SELECT
        SALES_LEDGER.TRANSACTION_DATE,
        SALES_LEDGER.ITEM_ID,
        SALES_LEDGER.PRODUCT_KEY,
        SALES_LEDGER.TRANSACTION_PRICE AS SALES,
        ROUND(SALES_LEDGER.LOGISTIC_ADDITIONAL_COS, 4) AS LOG_COS,
        ROUND(SALES_LEDGER.MERCHANT_CHANNEL_FEES, 4) AS REF_COS,
        ROUND((SALES_LEDGER.LOGISTIC_ADDITIONAL_COS + SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS TOT_FULFIL_COS,
        ROUND(((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS CONT_AFT_MERCH,
        ROUND(COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0), 4) AS COS,
        ROUND((((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES) - COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0)), 4) AS PROFIT,
        SALES_LEDGER.MERCHANT_CHANNEL AS SALES_CHANNEL,
        SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY AS SALES_COUNTRY,
        SALES_LEDGER.LOGISTIC_CHANNEL AS LOGISTIC_CHANNEL,
        SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY AS LOGISTIC_COUNTRY,
        SALES_LEDGER.TRANSACTION_STATUS AS TYPE
    FROM PUBLIC.SALES_LEDGER
        /++ PUBLIC.SALES_LEDGER.tableScan ++/
        /++ WHERE (SALES_LEDGER.LOGISTIC_CHANNEL IS ?1)
            AND ((SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY IS ?2)
            AND (SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02'))
        ++/
    LEFT OUTER JOIN PUBLIC.INVENTORY_ITEMS_GB_AMAZON
        /++ PUBLIC.INVENTORY_ITEMS_SINGLE_ITEM_UUID_UINDEX: SINGLE_ITEM_UUID = SALES_LEDGER.ITEM_UUID ++/
        ON (SALES_LEDGER.ITEM_ID = INVENTORY_ITEMS_GB_AMAZON.CONCATENATED_PRIMARY_KEY)
        AND (SALES_LEDGER.ITEM_UUID = INVENTORY_ITEMS_GB_AMAZON.SINGLE_ITEM_UUID)
    WHERE (SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY IS ?2)
        AND ((SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02')
        AND (SALES_LEDGER.LOGISTIC_CHANNEL IS ?1)): LOGISTIC_COUNTRY = 'GB'
        AND LOGISTIC_CHANNEL = 'AMAZON'
     */
WHERE (V_SALES_CONTRIBUTION.LOGISTIC_COUNTRY = 'GB')
    AND (V_SALES_CONTRIBUTION.LOGISTIC_CHANNEL = 'AMAZON')),
(SELECT ROUND(SUM(REF_COS), 2)
FROM PUBLIC.V_SALES_CONTRIBUTION
  /* SELECT
      SALES_LEDGER.TRANSACTION_DATE,
      SALES_LEDGER.ITEM_ID,
      SALES_LEDGER.PRODUCT_KEY,
      SALES_LEDGER.TRANSACTION_PRICE AS SALES,
      ROUND(SALES_LEDGER.LOGISTIC_ADDITIONAL_COS, 4) AS LOG_COS,
      ROUND(SALES_LEDGER.MERCHANT_CHANNEL_FEES, 4) AS REF_COS,
      ROUND((SALES_LEDGER.LOGISTIC_ADDITIONAL_COS + SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS TOT_FULFIL_COS,
      ROUND(((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES), 4) AS CONT_AFT_MERCH,
      ROUND(COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0), 4) AS COS,
      ROUND((((SALES_LEDGER.TRANSACTION_PRICE - SALES_LEDGER.LOGISTIC_ADDITIONAL_COS) - SALES_LEDGER.MERCHANT_CHANNEL_FEES) - COALESCE(INVENTORY_ITEMS_GB_AMAZON.ITEM_COS, 0)), 4) AS PROFIT,
      SALES_LEDGER.MERCHANT_CHANNEL AS SALES_CHANNEL,
      SALES_LEDGER.MERCHANT_CHANNEL_COUNTRY AS SALES_COUNTRY,
      SALES_LEDGER.LOGISTIC_CHANNEL AS LOGISTIC_CHANNEL,
      SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY AS LOGISTIC_COUNTRY,
      SALES_LEDGER.TRANSACTION_STATUS AS TYPE
  FROM PUBLIC.SALES_LEDGER
      /++ PUBLIC.SALES_LEDGER.tableScan ++/
      /++ WHERE (SALES_LEDGER.LOGISTIC_CHANNEL IS ?1)
          AND ((SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY IS ?2)
          AND (SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02'))
      ++/
  LEFT OUTER JOIN PUBLIC.INVENTORY_ITEMS_GB_AMAZON
      /++ PUBLIC.INVENTORY_ITEMS_SINGLE_ITEM_UUID_UINDEX: SINGLE_ITEM_UUID = SALES_LEDGER.ITEM_UUID ++/
      ON (SALES_LEDGER.ITEM_ID = INVENTORY_ITEMS_GB_AMAZON.CONCATENATED_PRIMARY_KEY)
      AND (SALES_LEDGER.ITEM_UUID = INVENTORY_ITEMS_GB_AMAZON.SINGLE_ITEM_UUID)
  WHERE (SALES_LEDGER.LOGISTIC_CHANNEL_COUNTRY IS ?2)
      AND ((SALES_LEDGER.TRANSACTION_DATE <= '2015-12-02')
      AND (SALES_LEDGER.LOGISTIC_CHANNEL IS ?1)): LOGISTIC_COUNTRY = 'GB'
      AND LOGISTIC_CHANNEL = 'AMAZON'
   */
WHERE (V_SALES_CONTRIBUTION.SALES_COUNTRY = 'GB')
AND (V_SALES_CONTRIBUTION.SALES_CHANNEL = 'EBAY')))
